name: Build & Deploy Eppley Collector (GitHub Pages)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "15 10 * * *"  # ~03:15 America/Phoenix (UTC-7)

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || true

      # --------- Collect all sources (continues even if one collector fails) ---------
      - name: Run collectors
        env:
          EMAIL: ${{ vars.NCBI_EMAIL }}          # REQUIRED (Settings → Actions → Variables)
          YT_API_KEY: ${{ secrets.YT_API_KEY }}  # Optional (Settings → Actions → Secrets)
        run: |
          set -e
          python main.py

      # --------- Enrich PubMed with abstracts (optional but recommended) -------------
      - name: Enrich PubMed abstracts
        env:
          EMAIL: ${{ vars.NCBI_EMAIL }}
          NCBI_TOOL: eppley-collector
        run: |
          if [ -f tools/augment_pubmed_abstracts.py ]; then
            python tools/augment_pubmed_abstracts.py
          fi

      # --------- Merge/normalize → eppley_master.{csv,json} + status.json -----------
      - name: Merge to master
        run: |
          python tools/generate_master_csv.py
          echo "Top of master:"
          head -n 3 output/eppley_master.csv || true
          echo "Status:"
          cat output/status.json || true
          echo "Output listing:"
          ls -lah output

      # --------- Publish EVERYTHING (must include /output) --------------------------
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
