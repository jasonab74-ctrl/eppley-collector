name: Collect & Build

on:
  workflow_dispatch:          # manual runs
  push:
    branches: [ main ]        # run on pushes to main
  schedule:
    - cron: "35 6 * * *"      # nightly at 06:35 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas beautifulsoup4 lxml

      # IMPORTANT: Ensure you created an Actions Variable named NCBI_EMAIL,
      # and an Actions Secret named YT_API_KEY in your repo settings.
      - name: Export API credentials
        env:
          NCBI_EMAIL: ${{ vars.NCBI_EMAIL }}
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: |
          echo "NCBI_EMAIL=${NCBI_EMAIL}" >> $GITHUB_ENV
          echo "YT_API_KEY=${YT_API_KEY}" >> $GITHUB_ENV

      - name: Run collectors
        run: python main.py

      - name: Write status.json
        run: python tools/write_status.py

      # ────────────── DIAGNOSTIC STEP #1 ──────────────
      # Lists what was created and prints the first lines of each CSV.
      - name: List output files & sizes (diagnostic)
        run: |
          echo ">>> output directory listing"
          ls -lah output || true
          echo ">>> preview first 3 lines of each CSV"
          for f in output/*.csv; do
            echo "==== HEAD of $f ===="
            head -n 3 "$f" || true
          done

      # ────────────── DIAGNOSTIC STEP #2 ──────────────
      # Dumps status.json so you can see the same JSON your site reads.
      - name: Echo status.json (diagnostic)
        run: |
          if [ -f output/status.json ]; then
            echo ">>> output/status.json"
            cat output/status.json
          else
            echo "status.json missing"
          fi

      - name: Commit and push outputs
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add output/*.csv output/status.json || true
          git commit -m "Auto: update collected data" || exit 0
          git push || true
