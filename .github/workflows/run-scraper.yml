name: Run Eppley Scraper (PR)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3,5,7 * * *"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: eppley-scraper-pr
  cancel-in-progress: true

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create/update working branch
        run: |
          set -euo pipefail
          git fetch origin
          if git show-ref --verify --quiet refs/heads/bot/scrape; then
            git checkout bot/scrape
            git rebase origin/main || true
          else
            git checkout -b bot/scrape origin/main
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        env:
          YT_API_KEY: ${{ secrets.YT_API_KEY }}
        run: |
          set -euo pipefail
          python main.py --only all

      - name: Commit changes (skip if none)
        id: commit
        run: |
          set -euo pipefail
          git config user.name  "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "NO_CHANGES=true" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            echo "NO_CHANGES=false" >> $GITHUB_OUTPUT
            git commit -m "Scraper output $(date -u +'%Y-%m-%d %H:%M:%S UTC')"
          fi

      - name: Push branch
        if: steps.commit.outputs.NO_CHANGES == 'false'
        run: |
          set -euo pipefail
          git push -u origin bot/scrape

      - name: Create or update PR
        if: steps.commit.outputs.NO_CHANGES == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bot/scrape
          base: main
          title: "Scraper: update data files"
          commit-message: "Scraper: update data files"
          body: |
            Automated scraper update. Review diffs, then merge.
          labels: data, automated
          draft: false
          delete-branch: false